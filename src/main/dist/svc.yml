name: {{FRAMEWORK_NAME}}
scheduler:
  principal: {{SERVICE_PRINCIPAL}}
  user: {{SERVICE_USER}}
pods:
  master:
    image: {{COLLECTOR_DOCKER_IMAGE}}
    count: 1
    tasks:
      exporter:
        goal: RUNNING
        cmd: /bin/mesos-exporter -master {{MASTER_ADDRESS}}
        cpus: {{MASTER_CPUS}}
        memory: {{MASTER_MEM}}
        ports:
          collector:
            port: 9105
            env-key: EXPORTER_PORT
  dcos:
    count: 1
    uris:
      - {{BOOTSTRAP_URI}}
      - {{DCOS_EXPORTER_URI}}
    tasks:
      exporter:
        goal: RUNNING
        cmd: >
          chmod +x exporter && ./exporter \
            --listen-port=9090 \
            --listen-host=0.0.0.0 \
            --importer-interval={{SCRAPE_INTERVAL}}s \
            --iam-config="" \
            > $MESOS_SANDBOX/exporter.log 2>&1
        cpus: 0.3
        memory: 256
        volume:
          path: "exporter-data"
          type: ROOT
          size: 1024
        ports:
          exporter:
            port: 9090
        env:
          AUTH_TOKEN: {{EXPORTER_AUTH_TOKEN}}
  prometheus:
    count: 1
    uris:
      - {{PROMETHEUS_URI}}
      - {{BOOTSTRAP_URI}}
    tasks:
      server:
        goal: RUNNING
        cmd: ./bootstrap --resolve=false && prometheus-1.8.0.linux-amd64/prometheus -config.file=prometheus.yml -storage.local.path=$MESOS_SANDBOX/prometheus-storage
        env:
          SCRAPE_INTERVAL: {{SCRAPE_INTERVAL}}
          SCRAPE_TIMEOUT: {{SCRAPE_TIMEOUT}}
        configs:
          server-properties:
            template: prometheus.yml
            dest: prometheus.yml
        cpus: {{PROMETHEUS_CPUS}}
        memory: {{PROMETHEUS_MEM}}
        volume:
          path: prometheus-storage
          type: ROOT
          size: 25000
        ports:
          prometheus:
            port: 9090
            env-key: PROMETHEUS_PORT
            advertise: true
            vip:
              prefix: prometheus
              port: 9090
  grafana:
    pre-reserved-role: slave_public
    count: 1
    uris:
      - {{GRAFANA_URI}}
    tasks:
      server:
        goal: RUNNING
        cmd: cd grafana-2.5.0 && bin/grafana-server web
        cpus: {{GRAFANA_CPUS}}
        memory: {{GRAFANA_MEM}}
        ports:
          grafana:
            port: 3000
            env-key: GRAFANA_PORT
            advertise: true
